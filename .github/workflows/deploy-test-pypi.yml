name: Deploy Package to Test PyPI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

permissions:
  contents: read

jobs:
  check-version:
    
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: set version
      run: echo "VERSION=$(echo $(python3 -c "from setup import version; print(version)"))" >> $GITHUB_ENV
    - name: read version
      run: echo "version:" $VERSION
    - name: set tag
      run: echo "TAG=v$VERSION" >> $GITHUB_ENV
    - name: read tag
      run: echo "tag:" $TAG
    - name: check tag exists
      uses: mukunku/tag-exists-action@v1.1.0
      with:
        tag: $TAG
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: check results
      run: echo ${{ steps.checkTag.outputs.exists }}
    - name: tag 
      uses: actions/github-script@v5
      with:
        script: |
          github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: 'refs/tags/$TAG',
            sha: context.sha
          })


    
    

  # build:

  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up Python 3.10
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: "3.10"
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install flake8 pytest
  #       if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  #   - name: Lint with flake8
  #     run: |
  #       # stop the build if there are Python syntax errors or undefined names
  #       flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
  #       # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
  #       flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  #   - name: Run test
  #     run: |
  #       pytest -v
